// Задача 45: Напишите программу, которая будет создавать копию
// заданного массива с помощью поэлементного копирования.

//Мое решение через string
/*
int[] array = { 4, 5, 1, 3, 7, 4 };
PrintArray(array);
string result = Copy(array);
Console.WriteLine(result);
string Copy(int[] arr)
{
    string result = "";

    for (int i = 0; i < arr.Length; i++)
    {
        result += array[i];
    }
    return result;
}
void PrintArray(int[] array)
{
   Console.WriteLine(string.Join(", ", array));
}
*/

//Второй расширенный вариант

Console.WriteLine("Введите размер массива"); // вывод в консоль предложения ввести число
bool isParsed = int.TryParse(Console.ReadLine(), out int number); // ввод числа в консоль с проверкой что введены числа, а не буквы

if (!isParsed) // условие проверка что введены числа
{
    Console.WriteLine("Введено не число"); // если введены буквы вывод в консоль
    return; // прекращение работы программы
}

//При создании копии исходного массива мы в метода создаем новый массив (выделяем под него память использую метод new), а после поэлементно копируем в него значения исходного массива строка 71
//При создании массива и просто копировании в него исходного мы не создаем нового массива, а копируем в него ссылку на исходный строка 44. Получается что изменяя tmparray мы будем изменять исходный array
//Метод сравнения двух массивов (строки 49 и 51) осуществляет не сравнение элементов данных массивов, а сравнивает их ссылки на участки памяти, а именно в первом случае строка 49 будет false так как под них выделены разные участки, а во втором случае будет true так как это один и тот же массив.

int[] array = GenerateArray(number); // Вызов метода через создание новой переменной
PrintArray(array); // Показываем этот метод

int[] tmparray = array; // созданние массива типа int и запись в него ссылки на исходный массив

int[] copyarray = ArrayCopyTo(array); // Вызов метода через создание новой переменной
PrintArray(copyarray); // Показываем этот метод

Console.WriteLine(array == copyarray); // вывод в консоль результата сравнения ссылок на разные массивы (копии и исходного) будет false так как под них выделены отдельные участки памяти

Console.WriteLine(array == tmparray); // вывод в консоль результата сравнения ссылок массивов которые лежат по одной ссылке. будет true так как это ссылки на один и тот же участок памяти

// Метод создания массива типа int и его заполнение случайными числами
int[] GenerateArray(int number)
{
    int[] array = new int[number]; // создание массива типа int и размером равным переданному параметру

    Random random = new Random(); // создание переменной типа Random

    for (int i = 0; i< number; i++) // цикл от i до length (размер массива)
    {
        array[i] = random.Next(0, 10); // запись в массив случайного числа
    }

    return array; // возврат массива как результат выполнения метода
}

// Метод создания нового массива типа int и поэлементном копировании в него исходного (переданного массива)
int[] ArrayCopyTo(int[] array)
{
    int[] copyarray = new int[array.Length]; // создаем новый массив типа int с размером равным длине исходного (переданного массива)

    for (int i = 0; i < array.Length; i++) // цикл от i до array.Length (длина исходного (переданного) массива)
    {
        copyarray[i] = array[i]; // поэлементное копирование в новый массив значений исходного (переданного)
    }

    return copyarray; // возврат массива как результат выполения метода
}

// метод вывода массива в консоль
void PrintArray(int[] array)
{
    Console.WriteLine($"Массив: [{string.Join(", ", array)}]"); // вывод в консоль
}